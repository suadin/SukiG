@inherits LayoutComponentBase

<div class="page @DarkLightCssClass()">
    <div class="main d-flex flex-column">
        <div class="d-flex flex-row flex-gap-4" style="border-bottom-style: dashed; border-bottom-width: 4px; padding-bottom: 2px;">
            <!-- darkmode -->
            <button title="light/dark mode" class="btn btn-primary" @onclick="@ToggleMode"><span class="oi oi-brush"></span></button>
            <!-- chatroom -->
            <button title="open/close chat" class="btn btn-primary" @onclick="@ToggleChat"><span class="oi oi-chat"></span></button>
        </div>
        <div class="content p-2 flex-fill">
            @Body
        </div>
        <!-- chatroom -->
        @if (!isClosed)
        {
            <div class="chatroom-footer d-flex flex-column flex-gap-6 align-items-stretch">
                <ChatRoom @ref="chatRoom" @bind-IsClosed="@isClosed"></ChatRoom>
            </div>
        }
    </div>
</div>

@using SukiG.Client.Pages;
@code {
    // chatroom
    private ChatRoom chatRoom = new ChatRoom();
    private bool isClosed;
    private void ToggleChat() => isClosed = !isClosed;
    protected override async Task OnAfterRenderAsync(bool firstRender) => chatRoom.IsClosedChanged += ChildFiredEvent;
    public void ChildFiredEvent(bool isClosed)
    {
        this.isClosed = isClosed;
        StateHasChanged();
    }

    // darkmode
    private bool isDarkMode = false;
    private string DarkLightCssClass() => isDarkMode? "dark-mode" : string.Empty;
    private void ToggleMode() => isDarkMode = !isDarkMode;
}

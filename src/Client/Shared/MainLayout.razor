@inherits LayoutComponentBase

<div class="page @DarkLightMode()">
    <div class="sidebar">
        <NavMenu />
    </div>
    <div class="main d-flex align-items-start flex-column bd-highlight" style="height: 100vh">
        <div class="p-4 bd-highlight">
            <!-- darkmode -->
            <button class="btn btn-primary" @onclick="@ToggleMode"><span class="oi oi-brush" aria-hidden="true" title="change theme"></span></button>
            <!-- chatroom -->
            <button class="btn btn-primary" @onclick="@OpenChat"><span class="oi oi-chat" aria-hidden="true" title="open chat"></span></button>
        </div>
        <div class="content px-4 p-2 bd-highlight" style="width: 100%">
            @Body
        </div>
    </div>
    <!-- chatroom -->
    @if (!isChatClosed)
    {
        <div style="width: 250px; height: 100vh;">
            <SukiG.Client.Pages.ChatRoom @ref="chatRoom" @bind-Closed="@isChatClosed"></SukiG.Client.Pages.ChatRoom>
        </div>
    }
</div>

@using SukiG.Client.Pages;
@code {
    // chatroom
    private ChatRoom chatRoom = new ChatRoom();
    private bool isChatClosed = false;
    private void OpenChat() => isChatClosed = false;
    protected override async Task OnAfterRenderAsync(bool firstRender) => chatRoom.ClosedChanged += ChildFiredEvent;
    public void ChildFiredEvent(bool closed)
    {
        isChatClosed = closed;
        StateHasChanged();
    }

    // darkmode
    private bool isDarkMode = false;
    private string DarkLightMode() => isDarkMode? "dark-mode" : string.Empty;
    private void ToggleMode() => isDarkMode = !isDarkMode;
}
